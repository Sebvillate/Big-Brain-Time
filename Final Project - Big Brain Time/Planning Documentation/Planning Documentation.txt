File IO:
-Used to save user data (folders, tasks, statistics)

Data structure example:
School work{                          <-----------------Outermost folder
Math{                                 <-----------------Math Folder inside of School work
12w%%47839^7%7                        <-----------------Task Code used to store tasks in other folder
}                                     <-----------------Close Math Folder
Chemistry{                            <-----------------Chemistry folder inside of School Work
q53%^&(ds(07                          <-----------------Task Code
}                                     <-----------------Close Chemistry Folder
}                                     <-----------------Close School Work Folder


Inside of Task File:

12w%%47839^7%7                        <-----------------Task Code
Unit 4 Quiz                           <-----------------Task Title
Study for the combined functions quiz <-----------------Task Description
07/10/2020                            <-----------------Due Date
9                                     <-----------------Priority Level For Task


Object List:

-Lots of use of Grid Modules (Modified Buttons, Menu, Labels)
	>Modified Buttons (Toggle buttons)
	>Drop Down Menus

-Folder Object (used to store tasks and other folders)
	>Attributes: Title, Contents (list)
	>Methods: Task_Add (Adds task to contents)

-Task Object
	>Attributes: Title, Description, Due Date, Priority Level, Task Code, Data (stores all attributes in list for easy saving)
	>Methods: Generate_Code (Generates Task Code)

-Timer Object (Used in study screen)
	>Attributes: Intervals (list of time intervals to iterate through), StartTime, Current interval (Indice used for Intervals)
	>Methods: Update (updates displayed timer as well as progress bar)

-UserData Object (Stores User Data)
	>Attributes: TasksCompleted (dictionary using dd/mm as key for storing how many tasks have been completed),
		     HoursStudied(dictionary using dd/mm as key for storing how many hours set aside for studying each day)
	>Methods: DisplayTasks & Displayhours (Uses matplotlib module to generate bar graphs vidualizing dictionary data)



To Do List:
	>Sebastian
		-File read in and datastructure for saving info
		-Folder and task objects
		-Userdata Object
		-Sorting code for "Sort by:" button
		-Timer Page
		-MatPlotLib Display code
		-Backend Code connecting the data structure and the UI (Making folders generated by folder object data)
		-Folder object and Task Object Visual Layout
	>Alex
		-Modified Buttons (Drop Down/Toggle)
		-Timer Object and visual
		-Folder and Task page
		-Add task page
		-Page Layouts
		-Input boxes
		-Calendar Feature

Testing Procedure:
	1.Program was extensively used, every feature was tested and was attempted to be broken (button mashing, clicking around randomly)
	2.Program was given to family members to do a run through and use all the features like a first time user would 
	3.Code was looked over for glaring errors, all important datasets and variables were printed to assure they behaved as expected

		
		

